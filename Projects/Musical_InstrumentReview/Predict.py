# -*- coding: utf-8 -*-
"""Predict.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1R4vd40D0w6e0p5fHkCPTimHNrczhuLYw

# Predict Function

In this file I've called already trained and saved model to predict sentiment of a review.
We just have to change file path for saved model and vectorizer in order to run this and after that just call predict function to classify it's sentiment.
Should be called in following format -
> python predict.py --review "REVIEW INPUT TO BE GIVEN HERE"

Code is explained through comments
"""

# from google.colab import drive
# drive.mount('/content/drive')

# !cd '/content/drive/My Drive/ML Projects/MusicSentimentAnalysis/'

# Commented out IPython magic to ensure Python compatibility.
# Importing Libraries

from sklearn.externals import joblib
import re
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns
from sklearn.feature_extraction.text import TfidfVectorizer
import nltk
import argparse

joblib_file = "/content/drive/My Drive/ML Projects/MusicSentimentAnalysis/SVMModel.pkl"  # FilePath of Pretrained Model
svm_model = joblib.load(joblib_file)                                       # Loading the pretrained model

#Sentiment Score     (Categorising Opinions Task-1)  
# def get_sentiment(score):
#     if score <= 2:
#         return 'NEGATIVE'
#     elif score == 3:
#         return 'NEUTRAL'
#     else: 
#         return 'POSITIVE'

# Function for cleaning the text
    
def text_clean(text):
    text = str(text).lower()
    text = re.sub(r'@[A-Za-z0-9]','',text) # Removes @mentions
    text = re.sub(r'#','',text) # Removing the Hashtag
    text = re.sub(r'RT[\s]','',text) # Removing RT
    text = re.sub(r'_','',text) # Removing RT
    return text

parser = argparse.ArgumentParser()    # Input Given
parser.add_argument("--review", type=str, help="Write a review")
review1 = parser.parse_args()

# review1 = "Product quality is good"

review = text_clean(review1)   # Input Text Cleaned

joblib_file = "/content/drive/My Drive/ML Projects/MusicSentimentAnalysis/vect.pkl"   # Pretrained Vectorizer Loaded
vectorizer = joblib.load(joblib_file)   # Loading Text Vectorizer

t = vectorizer.transform([review]).toarray()    # Input Text Vectorized

pred = svm_model.predict(t)   # Classifying the Input and saving category/sentiment in pred variable

print(pred)